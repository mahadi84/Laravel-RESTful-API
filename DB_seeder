

public function run()
    {
        Schema::disableForeignKeyConstraints();
        // DB::statement('SET FOREIGN_KEY_CHECKS = 0');

        User::truncate();
        Category::truncate();
        Product::truncate();
        Transaction::truncate();
        DB::table('category_product')->truncate();

        User::flushEventListeners();
        Category::flushEventListeners();
        Product::flushEventListeners();
        Transaction::flushEventListeners();

        $usersQuantity = 1000;
        $categoriesQuantity = 5;
        $productsQuantity = 1000;
        $transactionsQuantity = 800;

        User::factory()->count($usersQuantity)->create();
        Category::factory()->count($categoriesQuantity)->create();
        
        // insert data to both Products table and Product_Category PIVOT Table
        Product::factory()->count($productsQuantity)->create()->each(
            function ($product) {
                $categories = Category::all()->random(mt_rand(1, 5))->pluck('id');                
                $product->categories()->attach($categories);
            });
            
        Transaction::factory()->count($transactionsQuantity)->create();

        // Passport::client()->forceCreate([
        //     'user_id' => null,
        //     'name' => '',
        //     'secret' => 'secret',
        //     'redirect' => '',
        //     'personal_access_client' => true,
        //     'password_client' => true,
        //     'revoked' => false,
        // ]);

        // $personalClient = Passport::client()->forceCreate([
        //     'user_id' => null,
        //     'name' => '',
        //     'secret' => 'secret',
        //     'redirect' => '',
        //     'personal_access_client' => true,
        //     'password_client' => false,
        //     'revoked' => false,
        // ]);

        // Passport::personalAccessClient()->forceCreate([
        //     'client_id' => $personalClient->id,
        // ]);

        // Schema::enableForeignKeyConstraints();
    }
